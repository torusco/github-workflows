name: "Terraform Pull Request Checkov Tests v7"

on:
  workflow_call:
    inputs:
    
      AWS_REGION:
        type: string
        required: true

      CDK_PREFIX:
        type: string
        required: true
  
      ENVIRONMENT_LONG_NAME:
        type: string
        required: true
  
      RUNS_ON:
        type: string
        required: false
        default: ubuntu-latest

      SAML_AWS_ROLE_ARN:
        type: string
        required: true

      TARGET_AWS_ACCOUNT_ROLE_ARN:
        type: string
        required: false

      TARGET_TERRAFORM_FOLDER_NAME:
        type: string
        required: true
        
    secrets:
      # required for using github package manager
      NPM_TOKEN:
        required: true

env:
  PYTHON_VERSION: "3.10"
  TERRAFORM_VERSION: "1.44"

jobs:

  terraform_checkov:

    runs-on: ${{ inputs.RUNS_ON }}
    steps:
      - name: echo
        run: |
          echo TARGET_TERRAFORM_FOLDER_NAME ${{ inputs.TARGET_TERRAFORM_FOLDER_NAME }}
          echo SAML_AWS_ROLE_ARN ${{ inputs.SAML_AWS_ROLE_ARN }}
          echo TARGET_AWS_ACCOUNT_ROLE_ARN ${{ inputs.TARGET_AWS_ACCOUNT_ROLE_ARN }}
          echo AWS_REGION ${{ inputs.AWS_REGION }}

      - if: github.event.client_payload.ref != ''
        name: GITHUB_CHECKOUT_REF
        run: |
          echo "use ${{ github.event.client_payload.ref }} not ${{ github.ref }}"
          echo "GITHUB_CHECKOUT_REF=${{ github.event.client_payload.ref_name }}" >> $GITHUB_ENV

      - if: github.event.client_payload.ref != ''
        name: actions/checkout@v3 client payload ref
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.client_payload.ref }}

      - if: github.event.client_payload.ref == ''
        name: GITHUB_CHECKOUT_REF
        run: |
          echo "use default ${{ github.ref }}"
          echo "GITHUB_CHECKOUT_REF=${{ github.ref_name }}" >> $GITHUB_ENV

      - if: github.event.client_payload.ref == ''
        name: actions/checkout@v3 default ref
        uses: actions/checkout@v3

      - uses: saml-to/assume-aws-role-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          role: ${{ inputs.SAML_AWS_ROLE_ARN }}
          region: ${{ inputs.AWS_REGION }}
          provider: awsProduction

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
  
      - name: Install checkov
        run: |
          python -c "import sys; print(sys.version)"
          pip install checkov
  
      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: true
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: ${{ inputs.TARGET_AWS_ACCOUNT_ROLE_ARN }}
          aws-region: ${{ inputs.AWS_REGION }}
          role-duration-seconds: 3600

      - name: Environment Variables
        run: |
          echo "CDK_PREFIX=${{ inputs.CDK_PREFIX }}" >> $GITHUB_ENV
          echo "TF_VAR_CDK_PREFIX=${{ inputs.CDK_PREFIX }}" >> $GITHUB_ENV
          echo "TF_VAR_TORUS_ENVIRONMENT=${{ inputs.ENVIRONMENT_LONG_NAME }}" >> $GITHUB_ENV

      - name: Terraform Checkov
        run: |
          cd ${{ inputs.TARGET_TERRAFORM_FOLDER_NAME }}
          terraform --version
          checkov -d .

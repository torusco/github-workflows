name: "Airflow Waiter v8"

on:
  workflow_call:
    inputs:
      AWS_REGION:
        type: string
        required: true

      AIRFLOW_ENVIRONMENT_NAME:
        description: "What is the name of the airflow enviroment to wait for?"
        type: string
        required: true

      CDK_PREFIX:
        description: environment instance name is used to select the environment gate and to deploy CDK and Terraform code
        type: string
        required: true

      ENVIRONMENT_LONG_NAME:
        type: string
        required: true

      RUNS_ON:
        type: string
        required: false
        default: ubuntu-latest

      SLACK_CHANNEL_ID:
        type: string
        required: false

      TARGET_AWS_ACCOUNT_ROLE_ARN:
        type: string
        required: true

    secrets:

      # only required if using slack provider
      SLACK_BOT_TOKEN:
        required: false

      # required for using github refs
      NPM_TOKEN:
        required: true
jobs:

  airflow_waiter:

    runs-on: ${{ inputs.RUNS_ON }}

    permissions: # github oidc
      id-token: write
      contents: read

    steps:

      - name: echo
        run: |
          echo AWS_REGION ${{ inputs.AWS_REGION }}
          echo AIRFLOW_ENVIRONMENT_NAME ${{ inputs.AIRFLOW_ENVIRONMENT_NAME }}
          echo CDK_PREFIX ${{ inputs.CDK_PREFIX }}
          echo ENVIRONMENT_LONG_NAME ${{ inputs.ENVIRONMENT_LONG_NAME }}
          echo RUNS_ON ${{ inputs.RUNS_ON }}
          echo SLACK_CHANNEL_ID ${{ inputs.SLACK_CHANNEL_ID }}
          echo TARGET_AWS_ACCOUNT_ROLE_ARN ${{ inputs.TARGET_AWS_ACCOUNT_ROLE_ARN }}
          echo "GITHUB_RUN_URL_FOR_SLACK=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" >> $GITHUB_ENV

      - if: github.event.client_payload.ref != ''
        name: GITHUB_CHECKOUT_REF
        run: |
          echo "use ${{ github.event.client_payload.ref }} not ${{ github.ref }}"
          echo "GITHUB_CHECKOUT_REF=${{ github.event.client_payload.ref_name }}" >> $GITHUB_ENV
          echo "GITHUB_VERSION_URL_FOR_SLACK=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/releases/tag/${{ github.event.client_payload.ref_name }}" >> $GITHUB_ENV

      - if: github.event.client_payload.ref != ''
        name: actions/checkout@v4 client payload ref
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.NPM_TOKEN }} # matches github-torus-packages - repo, packages
          ref: ${{ github.event.client_payload.ref }}

      - if: github.event.client_payload.ref == ''
        name: GITHUB_CHECKOUT_REF
        run: |
          echo "use default ${{ github.ref }}"
          echo "GITHUB_CHECKOUT_REF=${{ github.ref_name }}" >> $GITHUB_ENV
          echo "GITHUB_VERSION_URL_FOR_SLACK=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/releases/tag/${{ github.ref_name }}" >> $GITHUB_ENV

      - if: github.event.client_payload.ref == ''
        name: actions/checkout@v4 default ref
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.NPM_TOKEN }} # matches github-torus-packages - repo, packages

      - name: Deployer Role with Github OIDC Provider
        uses: aws-actions/configure-aws-credentials@v4
        with:
            role-to-assume: ${{inputs.TARGET_AWS_ACCOUNT_ROLE_ARN}}
            aws-region: ${{inputs.AWS_REGION}}

      - name: Slack CDK Start
        id: slack
        if: "${{ inputs.SLACK_CHANNEL_ID != '' }}"
        uses: slackapi/slack-github-action@v1.25.0
        with:
          channel-id: ${{ inputs.SLACK_CHANNEL_ID }}
          payload: |
            {
              "text" : ":large_yellow_circle: :airflow: Waiting! :${{ github.event.repository.name }}: ${{ github.event.repository.name }} ${{ inputs.AIRFLOW_ENVIRONMENT_NAME }} <${{ env.GITHUB_VERSION_URL_FOR_SLACK }}|${{ env.GITHUB_CHECKOUT_REF }}> to ${{ inputs.ENVIRONMENT_LONG_NAME }} ${{ inputs.CDK_PREFIX }} <${{ env.GITHUB_RUN_URL_FOR_SLACK }}|Action> "
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Waiter Check Airflow is Ready
        run: |
          STATUS=$(aws mwaa get-environment --name ${{ inputs.AIRFLOW_ENVIRONMENT_NAME}} --query 'Environment.Status' --out text)

          if [[ $? -eq 254 ]]; then
            echo "Airflow not found, continuing..."
            
          else
            echo "Airflow found, waiting..."

            WAITED=0
            WAIT_TIME=5

            while [[ $STATUS == "UPDATING" ]]
            do
              STATUS=$(aws mwaa get-environment --name ${{ inputs.AIRFLOW_ENVIRONMENT_NAME}} --query 'Environment.Status' --out text)
              echo "Waiting for Airflow ${{ inputs.AIRFLOW_ENVIRONMENT_NAME}} to finish UPDATING for $WAITED seconds"
              WAITED=$((WAITED + WAIT_TIME))
              sleep $WAIT_TIME
            done
          
            fi
          
      - name: Slack CDK Complete
        if: "${{ inputs.SLACK_CHANNEL_ID != '' }}"
        uses: slackapi/slack-github-action@v1.25.0
        with:
          channel-id: ${{ inputs.SLACK_CHANNEL_ID }}
          update-ts: ${{ steps.slack.outputs.ts }}
          payload: |
            {
              "text" : ":check-passed: :airflow: :${{ github.event.repository.name }}: ${{ github.event.repository.name }} ${{ inputs.AIRFLOW_ENVIRONMENT_NAME }} <${{ env.GITHUB_VERSION_URL_FOR_SLACK }}|${{ env.GITHUB_CHECKOUT_REF }}> deployed to ${{ inputs.ENVIRONMENT_LONG_NAME }} ${{ inputs.CDK_PREFIX }} <${{ env.GITHUB_RUN_URL_FOR_SLACK }}|Action> "
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Slack CDK Failure
        if: "${{ failure() && inputs.SLACK_CHANNEL_ID != '' }}"
        uses: slackapi/slack-github-action@v1.25.0
        with:
          channel-id: ${{ inputs.SLACK_CHANNEL_ID }}
          update-ts: ${{ steps.slack.outputs.ts }}
          payload: |
            {
              "text" : ":check-failed: :airflow: :${{ github.event.repository.name }}: ${{ github.event.repository.name }} ${{ inputs.AIRFLOW_ENVIRONMENT_NAME }} <${{ env.GITHUB_VERSION_URL_FOR_SLACK }}|${{ env.GITHUB_CHECKOUT_REF }}> not deployed to ${{ inputs.ENVIRONMENT_LONG_NAME }} ${{ inputs.CDK_PREFIX }} <${{ env.GITHUB_RUN_URL_FOR_SLACK }}|Action> "
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Slack CDK Cancelled
        if: "${{ cancelled() && inputs.SLACK_CHANNEL_ID != '' }}"
        uses: slackapi/slack-github-action@v1.25.0
        with:
          channel-id: ${{ inputs.SLACK_CHANNEL_ID }}
          update-ts: ${{ steps.slack.outputs.ts }}
          payload: |
            {
              "text" : ":black_square_for_stop: :airflow: :${{ github.event.repository.name }}: ${{ github.event.repository.name }} ${{ inputs.AIRFLOW_ENVIRONMENT_NAME }} <${{ env.GITHUB_VERSION_URL_FOR_SLACK }}|${{ env.GITHUB_CHECKOUT_REF }}> cancelled deploy to ${{ inputs.ENVIRONMENT_LONG_NAME }} ${{ inputs.CDK_PREFIX }} <${{ env.GITHUB_RUN_URL_FOR_SLACK }}|Action> "
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

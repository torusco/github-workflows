name: "Terraform Force Replace Resource v4"

on:
  workflow_call:
    inputs:
      AWS_REGION:
        type: string
        required: true

      CDK_PREFIX:
        description: environment instance name is used to select the environment gate and to deploy CDK and Terraform code
        type: string
        required: true

      ENVIRONMENT_LONG_NAME:
        type: string
        required: true

      SAML_AWS_ROLE_ARN:
        type: string
        required: true

      SLACK_CHANNEL_ID:
        type: string
        required: false

      TARGET_AWS_ACCOUNT_ROLE_ARN:
        type: string
        required: true

      TARGET_TERRAFORM_FOLDER_NAME:
        type: string
        required: true
        description: "which terraform project to run before cdk?"

      TERRAFORM_RESOURCE_TO_REPLACE:
        type: string
        required: true
        description: "fully qualified resource name to force replace"

    secrets:

      # only required if using slack provider
      SLACK_BOT_TOKEN:
        required: false

      # required for using github package manager
      NPM_TOKEN:
        required: true

jobs:

  terraform_force_replace:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.NPM_TOKEN }} # matches github-torus-packages - repo, packages

      # - name: use github as yarn registry
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: '14.x'
      #     registry-url: 'https://npm.pkg.github.com/'
      #     always-auth: true
      #     scope: '@torusco'

      - uses: saml-to/assume-aws-role-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          role: ${{ inputs.SAML_AWS_ROLE_ARN }}
          region: ${{ inputs.AWS_REGION }}
          provider: awsProduction

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: true

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ inputs.TARGET_AWS_ACCOUNT_ROLE_ARN }}
          aws-region: ${{ inputs.AWS_REGION }}
          role-duration-seconds: 3600

      - name: Environment Variables
        run: |
          echo "CDK_PREFIX=${{ inputs.CDK_PREFIX }}" >> $GITHUB_ENV
          echo "TF_VAR_CDK_PREFIX=${{ inputs.CDK_PREFIX }}" >> $GITHUB_ENV
          echo "TF_VAR_TORUS_ENVIRONMENT=${{ inputs.ENVIRONMENT_LONG_NAME }}" >> $GITHUB_ENV

      - name: Terraform Init
        run: |
          cd ${{ inputs.TARGET_TERRAFORM_FOLDER_NAME }}
          terraform --version
          terraform init -input=false -backend-config=./${{ env.TF_VAR_TORUS_ENVIRONMENT }}/$CDK_PREFIX.tf -reconfigure
          terraform workspace select $CDK_PREFIX || terraform workspace new -state="./.terraform/terraform.tfstate" $CDK_PREFIX

      - name: Slack Terraform Start
        if: "${{ inputs.SLACK_CHANNEL_ID != '' }}"
        uses: slackapi/slack-github-action@v1.19.0
        with:
          channel-id: ${{ inputs.SLACK_CHANNEL_ID }}
          payload: |
            {
              "text" : "Terraform Replace Starting: ${{ github.event.repository.name }} ${{ inputs.TARGET_TERRAFORM_FOLDER_NAME }} ${{ inputs.TERRAFORM_RESOURCE_TO_REPLACE }} to ${{ inputs.ENVIRONMENT_LONG_NAME }} ${{ inputs.CDK_PREFIX }}"
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Terraform Resource Plan and Apply
        run: |
          cd ${{ inputs.TARGET_TERRAFORM_FOLDER_NAME }}
          terraform plan -replace=${{ inputs.TERRAFORM_RESOURCE_TO_REPLACE }} -var-file=./${{ inputs.ENVIRONMENT_LONG_NAME }}/.tfvars -out=${{ inputs.ENVIRONMENT_LONG_NAME }}.out
          terraform apply -replace=${{ inputs.TERRAFORM_RESOURCE_TO_REPLACE }} ${{ inputs.ENVIRONMENT_LONG_NAME }}.out 

      - name: Slack Terraform Complete
        if: "${{ inputs.SLACK_CHANNEL_ID != '' }}"
        uses: slackapi/slack-github-action@v1.19.0
        with:
          channel-id: ${{ inputs.SLACK_CHANNEL_ID }}
          payload: |
            {
              "text" : "Terraform Replace Complete: ${{ github.event.repository.name }} ${{ inputs.TARGET_TERRAFORM_FOLDER_NAME }} ${{ inputs.TERRAFORM_RESOURCE_TO_REPLACE }} replaced in ${{ inputs.ENVIRONMENT_LONG_NAME }} ${{ inputs.CDK_PREFIX }}"
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

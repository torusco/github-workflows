name: "Terraform Pull Requests v8"

on:
  workflow_call:
    inputs:
      AWS_REGION:
        type: string
        required: true

      CDK_PREFIX:
        type: string
        required: true

      ENVIRONMENT_LONG_NAME:
        type: string
        required: true

      RUNS_ON:
        type: string
        required: false
        default: ubuntu-latest

      TARGET_AWS_ACCOUNT_ROLE_ARN:
        type: string
        required: true

      TARGET_TERRAFORM_FOLDER_NAME:
        type: string
        required: true

      TERRAFORM_VAR_FILE:
        type: string
        required: true
        description: "most var files are just -var-file=./<env long name>/.tfvars but some use instance specific variables such as -var-file=./<env long name>/<cdk prefix>.tfvars"
  
      TERRAFORM_VERSION:
        type: string
        required: false
        default: "1.6.6"
  
      USES_CLOUDFLARE:
        type: boolean
        required: false
        default: false

      USES_FIVETRAN:
        type: boolean
        required: false
        default: false

      USES_STRIPE:
        type: boolean
        required: false
        default: false

    secrets:
      # only required if using cloudflare provider
      CLOUDFLARE_API_TOKEN: 
        required: false

      # only required if using fivetran provider
      FIVETRAN_APIKEY: 
        required: false

      # only required if using fivetran provider
      FIVETRAN_APISECRET: 
        required: false

      # only required if using stripe provider
      STRIPE_API_KEY:
        required: false
        
jobs:

  terraform:

    runs-on: ${{ inputs.RUNS_ON }}

    permissions: # github oidc
      id-token: write
      contents: read

    steps:
      - name: echo
        run: |
          echo AWS_REGION ${{ inputs.AWS_REGION }}
          echo CDK_PREFIX ${{ inputs.CDK_PREFIX }}
          echo ENVIRONMENT_LONG_NAME ${{ inputs.ENVIRONMENT_LONG_NAME }}
          echo RUNS_ON ${{ inputs.RUNS_ON }}
          echo TARGET_AWS_ACCOUNT_ROLE_ARN ${{ inputs.TARGET_AWS_ACCOUNT_ROLE_ARN }}
          echo TARGET_TERRAFORM_FOLDER_NAME ${{ inputs.TARGET_TERRAFORM_FOLDER_NAME }}
          echo TERRAFORM_VAR_FILE ${{ inputs.TERRAFORM_VAR_FILE }}
          echo TERRAFORM_VERSION ${{ inputs.TERRAFORM_VERSION }}
          echo USES_CLOUDFLARE ${{ inputs.USES_CLOUDFLARE }}
          echo USES_FIVETRAN ${{ inputs.USES_FIVETRAN }}
          echo USES_STRIPE ${{ inputs.USES_STRIPE }}

      - uses: actions/checkout@v3

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: true
          terraform_version: ${{ inputs.TERRAFORM_VERSION }}

      - name: Deployer Role with Github OIDC Provider
        uses: aws-actions/configure-aws-credentials@v4
        with:
            role-to-assume: ${{inputs.TARGET_AWS_ACCOUNT_ROLE_ARN}}
            aws-region: ${{inputs.AWS_REGION}}

      - name: Environment Variables
        run: |
          echo "CDK_PREFIX=${{ inputs.CDK_PREFIX }}" >> $GITHUB_ENV
          echo "TF_VAR_CDK_PREFIX=${{ inputs.CDK_PREFIX }}" >> $GITHUB_ENV
          echo "TF_VAR_TORUS_ENVIRONMENT=${{ inputs.ENVIRONMENT_LONG_NAME }}" >> $GITHUB_ENV

      - name: CloudFlare Variables
        if: "${{ inputs.USES_CLOUDFLARE != '' }}"
        run: |
          echo "CLOUDFLARE_API_TOKEN=${{ secrets.CLOUDFLARE_API_TOKEN }}" >> $GITHUB_ENV

      - name: Fivetran Variables
        if: "${{ inputs.USES_FIVETRAN != '' }}"
        run: |
          echo "FIVETRAN_APIKEY=${{ secrets.FIVETRAN_APIKEY }}" >> $GITHUB_ENV
          echo "FIVETRAN_APISECRET=${{ secrets.FIVETRAN_APISECRET }}" >> $GITHUB_ENV

      - name: Stripe Variables
        if: "${{ inputs.USES_STRIPE != '' }}"
        run: |
          echo "STRIPE_API_KEY=${{ secrets.STRIPE_API_KEY }}" >> $GITHUB_ENV

      - name: Terraform Init
        run: |
          cd ${{ inputs.TARGET_TERRAFORM_FOLDER_NAME }}
          terraform --version
          terraform init -input=false -backend-config=./${{ env.TF_VAR_TORUS_ENVIRONMENT }}/$CDK_PREFIX.tf -reconfigure -upgrade
          terraform workspace select $CDK_PREFIX || terraform workspace new -state="./.terraform/terraform.tfstate" $CDK_PREFIX
          terraform validate

      # when not terraform apply, run the plan only with diff params
      - name: Terraform Plan
        run: |
          cd ${{ inputs.TARGET_TERRAFORM_FOLDER_NAME }}
          terraform plan -var-file=${{ inputs.TERRAFORM_VAR_FILE }} -input=false -lock=false -compact-warnings

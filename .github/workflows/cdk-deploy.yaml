name: "CDK Deploy v4"

# uses NPM_TOKEN to use github package manager

on:
  workflow_call:
    inputs:
      AWS_REGION:
        type: string
        required: true

      CDK_FOLDER_NAME:
        description: "use this folder with lerna monorepos that contain a cdk- folder, otherwise use YARN_FOLDER_NAME and set this to ."
        type: string
        required: true

      CDK_PREFIX:
        description: environment instance name is used to select the environment gate and to deploy CDK and Terraform code
        type: string
        required: true

      ENVIRONMENT_LONG_NAME:
        type: string
        required: true

      SAML_AWS_ROLE_ARN:
        type: string
        required: true

      SLACK_CHANNEL_ID:
        type: string
        required: false

      TARGET_AWS_ACCOUNT_ROLE_ARN:
        type: string
        required: true

      YARN_FOLDER_NAME:
        description: "use this folder repos that contain a series of cdk- folders but no parent and yarn needs to run within the cdk- folder not the root"
        type: string
        required: false
        default: "."

      # put uses flags at end
      USES_CLOUDFLARE:
        type: boolean
        required: false
        default: false

      USES_STRIPE:
        type: boolean
        required: false
        default: false

    secrets:
      # only required if using cloudflare provider
      CLOUDFLARE_API_TOKEN: 
        required: false

      # only required if using stripe provider
      STRIPE_API_KEY: 
        required: false

      # only required if using slack provider
      SLACK_BOT_TOKEN:
        required: false

      # required for using github package manager
      NPM_TOKEN:
        required: true

jobs:

  environment_gate:
    runs-on: ubuntu-latest
    environment: ${{ inputs.CDK_PREFIX }}
    steps:
      - run: echo "environment gate"

  cdk_deploy:

    needs: environment_gate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: saml-to/assume-aws-role@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          role: ${{ inputs.SAML_AWS_ROLE_ARN }}
          region: ${{ inputs.AWS_REGION }}
          provider: awsProduction

      - name: Yarn Install
        run: |
          cd ${{ inputs.YARN_FOLDER_NAME }}
          yarn install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Yarn Build
        run: |
          cd ${{ inputs.YARN_FOLDER_NAME }}
          yarn build

      - name: CDK_PREFIX
        run: |
          echo "CDK_PREFIX=${{ inputs.CDK_PREFIX }}" >> $GITHUB_ENV

      - name: Deployer Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ inputs.TARGET_AWS_ACCOUNT_ROLE_ARN }}
          aws-region: ${{ inputs.AWS_REGION }}
          role-duration-seconds: 3600

      - name: Slack CDK Start
        if: "${{ inputs.SLACK_CHANNEL_ID != '' }}"
        uses: slackapi/slack-github-action@v1.19.0
        with:
          channel-id: ${{ inputs.SLACK_CHANNEL_ID }}
          payload: |
            {
              "text" : "CDK Deploy Starting: ${{ inputs.CDK_FOLDER_NAME }} to ${{ inputs.ENVIRONMENT_LONG_NAME }} ${{ inputs.CDK_PREFIX }}"
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: CDK Deploy
        run: |
          cd ${{ inputs.YARN_FOLDER_NAME }}
          yarn pipeline:deploy

      - name: Slack CDK Complete
        if: "${{ inputs.SLACK_CHANNEL_ID != '' }}"
        uses: slackapi/slack-github-action@v1.19.0
        with:
          channel-id: ${{ inputs.SLACK_CHANNEL_ID }}
          payload: |
            {
              "text" : "CDK Deploy Complete: ${{ inputs.CDK_FOLDER_NAME }} to ${{ inputs.ENVIRONMENT_LONG_NAME }} ${{ inputs.CDK_PREFIX }}"
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  integration_test:
    needs: cdk_deploy
    runs-on: ubuntu-latest
    steps:
      - run: echo "todo integration test here move to v4 when pipeline:test-int is implemented"

name: "CDK Deploy v7"

# uses NPM_TOKEN to use github package manager

on:
  workflow_call:
    inputs:
      AWS_REGION:
        type: string
        required: true

      CDK_FOLDER_NAME:
        description: "use this folder with lerna monorepos that contain a cdk- folder, otherwise use YARN_FOLDER_NAME and set this to ."
        type: string
        required: true

      CDK_PREFIX:
        description: environment instance name is used to select the environment gate and to deploy CDK and Terraform code
        type: string
        required: true

      CHANGED_FILE_FOLDERS:
        description: folder name or list of folder names to check for changed files, used to skip run, Example cdk-airflow
        type: string
        required: false

      ENVIRONMENT_LONG_NAME:
        type: string
        required: true

      RUNS_ON:
        type: string
        required: true
        default: ubuntu-latest

      SAML_AWS_ROLE_ARN:
        type: string
        required: true

      SLACK_CHANNEL_ID:
        type: string
        required: false

      TARGET_AWS_ACCOUNT_ROLE_ARN:
        type: string
        required: true

      YARN_DEPLOY_COMMAND:
        type: string
        required: true

      YARN_FOLDER_NAME:
        description: "use this folder repos that contain a series of cdk- folders but no parent and yarn needs to run within the cdk- folder not the root"
        type: string
        required: false
        default: "."

      # put uses flags at end
      USES_CLOUDFLARE:
        type: boolean
        required: false
        default: false

      USES_STRIPE:
        type: boolean
        required: false
        default: false

    secrets:
      # only required if using cloudflare provider
      CLOUDFLARE_API_TOKEN: 
        required: false

      # only required if using stripe provider
      STRIPE_API_KEY: 
        required: false

      # only required if using slack provider
      SLACK_BOT_TOKEN:
        required: false

      # required for using github package manager
      NPM_TOKEN:
        required: true

jobs:

  cdk_deploy:

    runs-on: ${{ inputs.RUNS_ON }}
    steps:

      - name: echo
        run: |
          echo CDK_FOLDER_NAME ${{ inputs.CDK_FOLDER_NAME }}
          echo SAML_AWS_ROLE_ARN ${{ inputs.SAML_AWS_ROLE_ARN }}
          echo TARGET_AWS_ACCOUNT_ROLE_ARN ${{ inputs.TARGET_AWS_ACCOUNT_ROLE_ARN }}
          echo AWS_REGION ${{ inputs.AWS_REGION }}
          echo "GITHUB_RUN_URL_FOR_SLACK=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" >> $GITHUB_ENV

      - if: github.event.client_payload.ref != ''
        name: GITHUB_CHECKOUT_REF
        run: |
          echo "use ${{ github.event.client_payload.ref }} not ${{ github.ref }}"
          echo "GITHUB_CHECKOUT_REF=${{ github.event.client_payload.ref_name }}" >> $GITHUB_ENV
          echo "GITHUB_VERSION_URL_FOR_SLACK=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/releases/tag/${{ github.event.client_payload.ref_name }}" >> $GITHUB_ENV

      - if: github.event.client_payload.ref != ''
        name: actions/checkout@v3 client payload ref
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.NPM_TOKEN }} # matches github-torus-packages - repo, packages
          ref: ${{ github.event.client_payload.ref }}
          fetch-depth: 0  # changed-files requires ... OR "2" -> To retrieve the preceding commit.

      - if: github.event.client_payload.ref == ''
        name: GITHUB_CHECKOUT_REF
        run: |
          echo "use default ${{ github.ref }}"
          echo "GITHUB_CHECKOUT_REF=${{ github.ref_name }}" >> $GITHUB_ENV
          echo "GITHUB_VERSION_URL_FOR_SLACK=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/releases/tag/${{ github.ref_name }}" >> $GITHUB_ENV

      - if: github.event.client_payload.ref == ''
        name: actions/checkout@v3 default ref
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.NPM_TOKEN }} # matches github-torus-packages - repo, packages

      - if: inputs.CHANGED_FILE_FOLDERS != ''
        name: Get changed files
        id: changed_files 
        uses: tj-actions/changed-files@v35
        with:
          files: ${{ inputs.CHANGED_FILE_FOLDERS }}
          # WHY???? https://github.com/actions/runner/issues/662
      
      - if: steps.changed_files.outputs.all_changed_files != ''
        name: use github as yarn registry
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://npm.pkg.github.com/'
          always-auth: true
          scope: '@torusco'
          
      - if: steps.changed_files.outputs.all_changed_files != ''
        uses: saml-to/assume-aws-role-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          role: ${{ inputs.SAML_AWS_ROLE_ARN }}
          region: ${{ inputs.AWS_REGION }}
          provider: awsProduction

      - if: steps.changed_files.outputs.all_changed_files != ''
        name: yarn install && yarn build
        run: |
          cd ${{ inputs.YARN_FOLDER_NAME }}
          yarn install
          yarn build
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - if: steps.changed_files.outputs.all_changed_files != ''
        name: CDK_PREFIX
        run: |
          echo "CDK_PREFIX=${{ inputs.CDK_PREFIX }}" >> $GITHUB_ENV

      - if: steps.changed_files.outputs.all_changed_files != ''
        name: Deployer Role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: ${{ inputs.TARGET_AWS_ACCOUNT_ROLE_ARN }}
          aws-region: ${{ inputs.AWS_REGION }}
          role-duration-seconds: 3600

      - name: Slack CDK Start
        id: slack
        if: "${{ inputs.SLACK_CHANNEL_ID != '' }}"
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: ${{ inputs.SLACK_CHANNEL_ID }}
          payload: |
            {
              "text" : ":large_yellow_circle: :cdk: Deploying! :${{ github.event.repository.name }}: ${{ github.event.repository.name }} ${{ inputs.CDK_FOLDER_NAME }} <${{ env.GITHUB_VERSION_URL_FOR_SLACK }}|${{ env.GITHUB_CHECKOUT_REF }}> to ${{ inputs.ENVIRONMENT_LONG_NAME }} ${{ inputs.CDK_PREFIX }} <${{ env.GITHUB_RUN_URL_FOR_SLACK }}|Action> "
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - if: steps.changed_files.outputs.all_changed_files != ''
        name: CDK Deploy
        run: |
          cd ${{ inputs.YARN_FOLDER_NAME }}
          ${{ inputs.YARN_DEPLOY_COMMAND }}
          
      - name: Slack CDK Complete
        if: "${{ inputs.SLACK_CHANNEL_ID != '' }}"
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: ${{ inputs.SLACK_CHANNEL_ID }}
          update-ts: ${{ steps.slack.outputs.ts }}
          payload: |
            {
              "text" : ":check-passed: :cdk: :${{ github.event.repository.name }}: ${{ github.event.repository.name }} ${{ inputs.CDK_FOLDER_NAME }} <${{ env.GITHUB_VERSION_URL_FOR_SLACK }}|${{ env.GITHUB_CHECKOUT_REF }}> deployed to ${{ inputs.ENVIRONMENT_LONG_NAME }} ${{ inputs.CDK_PREFIX }} <${{ env.GITHUB_RUN_URL_FOR_SLACK }}|Action> "
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Slack CDK Failure
        if: "${{ failure() && inputs.SLACK_CHANNEL_ID != '' }}"
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: ${{ inputs.SLACK_CHANNEL_ID }}
          update-ts: ${{ steps.slack.outputs.ts }}
          payload: |
            {
              "text" : ":check-failed: :cdk: :${{ github.event.repository.name }}: ${{ github.event.repository.name }} ${{ inputs.CDK_FOLDER_NAME }} <${{ env.GITHUB_VERSION_URL_FOR_SLACK }}|${{ env.GITHUB_CHECKOUT_REF }}> not deployed to ${{ inputs.ENVIRONMENT_LONG_NAME }} ${{ inputs.CDK_PREFIX }} <${{ env.GITHUB_RUN_URL_FOR_SLACK }}|Action> "
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Slack CDK Cancelled
        if: "${{ cancelled() && inputs.SLACK_CHANNEL_ID != '' }}"
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: ${{ inputs.SLACK_CHANNEL_ID }}
          update-ts: ${{ steps.slack.outputs.ts }}
          payload: |
            {
              "text" : ":black_square_for_stop: :cdk: :${{ github.event.repository.name }}: ${{ github.event.repository.name }} ${{ inputs.CDK_FOLDER_NAME }} <${{ env.GITHUB_VERSION_URL_FOR_SLACK }}|${{ env.GITHUB_CHECKOUT_REF }}> cancelled deploy to ${{ inputs.ENVIRONMENT_LONG_NAME }} ${{ inputs.CDK_PREFIX }} <${{ env.GITHUB_RUN_URL_FOR_SLACK }}|Action> "
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

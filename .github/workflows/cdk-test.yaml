name: "CDK Test v8"
# was yarn-test.yaml, now cdk-test.yaml

on:
  workflow_call:
    inputs:

      NODE_VERSION:
        type: string
        required: false
        default: '20.x'

      RUNS_ON:
        type: string
        required: false
        default: ubuntu-latest-8-cores

      AWS_REGION:
        type: string
        required: false
        default: ''

      CDK_PREFIX:
        type: string
        required: false
        default: ''

      TARGET_AWS_ACCOUNT_ROLE_ARN:
        type: string
        required: false
        default: ''

      YARN_EXPORTS_COMMAND:
        type: string
        required: false
        default: ''

      YARN_TEST_COMMAND:
        type: string
        required: true

      USES_INTEGRATION_EXPORTS:
        type: boolean
        required: false
        default: false
        description: "should integration tests be run on this environment?"

      USES_SONAR_CLOUD:
        type: boolean
        default: true
        required: false

      USES_SONAR_CLOUD_MAIN_ANALYSIS:
        type: boolean
        default: false
        required: false
        description: "override the branch from the event, and run on main, use with USES_SONAR_CLOUD for sonar cloud main analysis "

    secrets:
      SONAR_TOKEN:
        required: false

      # required for using github package manager
      NPM_TOKEN:
        required: true

jobs:

  cdk_test:

    runs-on: ${{ inputs.RUNS_ON }}

    permissions: # github oidc
      id-token: write
      contents: read

    steps:

      - name: echo
        run: |
          echo NODE_VERSION ${{ inputs.NODE_VERSION }}
          echo RUNS_ON ${{ inputs.RUNS_ON }}
          echo USES_INTEGRATION_EXPORTS ${{ inputs.USES_INTEGRATION_EXPORTS }}
          echo AWS_REGION ${{ inputs.AWS_REGION }}
          echo CDK_PREFIX ${{ inputs.CDK_PREFIX }}
          echo TARGET_AWS_ACCOUNT_ROLE_ARN ${{ inputs.TARGET_AWS_ACCOUNT_ROLE_ARN }}
          echo YARN_EXPORTS_COMMAND ${{ inputs.YARN_EXPORTS_COMMAND }}
          echo YARN_TEST_COMMAND ${{ inputs.YARN_TEST_COMMAND }}
          echo USES_SONAR_CLOUD ${{ inputs.USES_SONAR_CLOUD }}
          echo USES_SONAR_CLOUD_MAIN_ANALYSIS ${{ inputs.USES_SONAR_CLOUD_MAIN_ANALYSIS }}

      - name: Checkout USES_SONAR_CLOUD and USES_SONAR_CLOUD_MAIN_ANALYSIS
        uses: actions/checkout@v4
        if: "${{ inputs.USES_SONAR_CLOUD == true && inputs.USES_SONAR_CLOUD_MAIN_ANALYSIS == true }}"
        with: 
          fetch-depth: 0     # sonar cloud - Number of commits to fetch. 0 indicates all history for all branches and tags.
          ref: main  # we want to force the ref to main
          token: ${{ secrets.NPM_TOKEN }} # matches github-torus-packages - repo, packages

      - name: Checkout USES_SONAR_CLOUD and not USES_SONAR_CLOUD_MAIN_ANALYSIS
        uses: actions/checkout@v4
        if: "${{ inputs.USES_SONAR_CLOUD == true && inputs.USES_SONAR_CLOUD_MAIN_ANALYSIS == false }}"
        with: 
          fetch-depth: 0     # sonar cloud - Number of commits to fetch. 0 indicates all history for all branches and tags.
          token: ${{ secrets.NPM_TOKEN }} # matches github-torus-packages - repo, packages
          # will take ref from the event (PR branch)

      - name: Checkout not USES_SONAR_CLOUD
        uses: actions/checkout@v4
        if: "${{ inputs.USES_SONAR_CLOUD == false }}"
        # clean regular checkout, no sonar cloud, no refs
        with: 
          token: ${{ secrets.NPM_TOKEN }} # matches github-torus-packages - repo, packages

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{inputs.NODE_VERSION}}
          registry-url: 'https://npm.pkg.github.com/'
          always-auth: true
          scope: '@torusco'

      - name: setup yarn and github registry
        run: |
          corepack enable
          yarn config set npmScopes.torusco.npmRegistryServer "https://npm.pkg.github.com"
          yarn config set npmScopes.torusco.npmAlwaysAuth true
          yarn config set npmScopes.torusco.npmAuthToken $NPM_AUTH_TOKEN
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  
      - name: yarn install && yarn build
        run: |
          yarn install
          yarn build
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: CDK Prefix
        if: "${{ inputs.USES_INTEGRATION_EXPORTS == true }}"
        run: |
          echo "CDK_PREFIX=${{ inputs.CDK_PREFIX }}" >> $GITHUB_ENV

      - name: Deployer Role with OIDC Provider
        if: "${{ inputs.USES_INTEGRATION_EXPORTS == true }}"
        uses: aws-actions/configure-aws-credentials@v4
        with:
            role-to-assume: ${{ inputs.TARGET_AWS_ACCOUNT_ROLE_ARN }}
            aws-region: ${{ inputs.AWS_REGION }}
      
      - name: ${{ inputs.YARN_EXPORTS_COMMAND }}
        if: "${{ inputs.USES_INTEGRATION_EXPORTS == true }}"
        run: |
          ${{ inputs.YARN_EXPORTS_COMMAND }}

      - name: ${{ inputs.YARN_TEST_COMMAND }}
        run: |
          ${{ inputs.YARN_TEST_COMMAND }}

      # instead of hacking it here, add this to the sonar-project.properties!
      - name: SonarCloud Set Main
        if: "${{ inputs.USES_SONAR_CLOUD == true && inputs.USES_SONAR_CLOUD_MAIN_ANALYSIS == true }}"
        run: |
          echo -e "\nsonar.branch.name=main" >> sonar-project.properties
          cat sonar-project.properties

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        if: "${{ inputs.USES_SONAR_CLOUD != '' }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
